{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/validators/email.ts","../../src/pages/signup/signup.ts"],"names":[],"mappings":"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","file":"10.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { SignupPage } from './signup';\n\n@NgModule({\n  declarations: [\n    SignupPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignupPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    SignupPage\n  ]\n})\nexport class SignupPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","import { FormControl } from '@angular/forms';\r\nexport class EmailValidator {\r\nstatic isValid(control: FormControl) {\r\nconst re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\r\n.test(\r\ncontrol.value\r\n);\r\nif (re) {\r\nreturn null;\r\n}\r\nreturn {\r\ninvalidEmail: true\r\n};\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController,Loading,\n  LoadingController,Alert,\n  AlertController } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\nimport { EmailValidator } from '../../validators/email';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@IonicPage()\n@Component({\n  selector: 'page-signup',\n  templateUrl: 'signup.html'\n})\nexport class SignupPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  public signupForm: FormGroup; \n  public loading: Loading;\n\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public loadingCtrl: LoadingController,public alertCtrl: AlertController,formBuilder: FormBuilder) {\n    this.signupForm = formBuilder.group({\n    email: [\n    \"\",\n    Validators.compose([Validators.required, EmailValidator.isValid])\n    ],\n    password: [\n    \"\",\n    Validators.compose([Validators.minLength(6), Validators.required])\n    ]\n    });\n  }\n\n  signupUser(): void {\n    if (!this.signupForm.valid) {\n    console.log(\n    `Need to complete the form, current value: ${this.signupForm.value}`\n    );\n    } else {\n    const email: string = this.signupForm.value.email;\n    const password: string = this.signupForm.value.password;\n    this.user.signupUser(email, password).then(\n    user => {\n    this.loading.dismiss().then(() => {\n    this.navCtrl.setRoot(MainPage);\n    });\n    },\n    error => {\n    this.loading.dismiss().then(() => {\n    const alert: Alert = this.alertCtrl.create({\n    message: error.message,\n    buttons: [{ text: \"Ok\", role: \"cancel\" }]\n    });\n    alert.present();\n    });\n    }\n    );\n    this.loading = this.loadingCtrl.create();\n    this.loading.present();\n    }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts"],"sourceRoot":""}